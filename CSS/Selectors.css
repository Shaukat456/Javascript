
---

## üéØ Lesson 3: CSS **Selectors** ‚Äì How You Target Elements

### üß† Concept: Selectors tell CSS **which elements to style**.

You can target:

* Specific tags (like all `<p>` tags)
* Classes or IDs
* Nested elements
* States (like hover)

---

## üîπ 1. **Element Selector**

Targets all HTML elements of a type.

```css
p {
  color: blue;
}
```

> Styles **all** `<p>` tags to be blue.

---

## üîπ 2. **Class Selector**

Use a `.` before the class name.

```html
<div class="alert">Warning message</div>
```

```css
.alert {
  color: red;
}
```

> Styles all elements with class `alert`. Classes are **reusable**.

---

## üîπ 3. **ID Selector**

Use a `#` before the ID. Must be **unique** on the page.

```html
<h1 id="main-heading">Welcome</h1>
```

```css
#main-heading {
  font-size: 32px;
}
```

> Use IDs sparingly‚Äîgreat for one-time styles.

---

## üîπ 4. **Group Selector**

Apply the same styles to multiple tags.

```css
h1, h2, h3 {
  font-family: 'Arial';
}
```

---

## üîπ 5. **Descendant Selector (Nested)**

Target elements **inside** other elements.

```css
nav a {
  color: white;
}
```

> Selects all `<a>` tags inside a `<nav>`.

---

## üîπ 6. **Pseudo-classes** (e.g. hover, active, first-child)

```css
button:hover {
  background-color: lightblue;
}
```

> Styles buttons **when hovered** by the mouse.

---

## ‚úçÔ∏è Example: Using All Selectors

```html
<!DOCTYPE html>
<html>
<head>
  <style>
    body {
      font-family: sans-serif;
    }

    h1 {
      color: darkblue;
    }

    .info {
      background-color: #e0f7fa;
      padding: 10px;
    }

    #unique-box {
      border: 2px solid orange;
    }

    ul li {
      color: green;
    }

    a:hover {
      color: red;
    }
  </style>
</head>
<body>

  <h1>Selectors in CSS</h1>

  <div class="info">This is an info box using a class selector.</div>

  <div id="unique-box">This box is targeted with an ID selector.</div>

  <ul>
    <li>First item</li>
    <li>Second item</li>
  </ul>

  <a href="#">Hover over me</a>

</body>
</html>
```

---

## üß† Real-World Use Case

Imagine building:

* A website with **cards**, **alerts**, and **buttons**.
* Use:

  * Class: `.card`, `.btn-primary`, `.alert-error`
  * ID: `#login-button` (just one unique button)
  * Pseudo-class: `button:hover` to add hover styles
 */
